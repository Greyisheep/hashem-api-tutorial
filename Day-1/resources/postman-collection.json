{
	"info": {
		"_postman_id": "day1-api-foundation",
		"name": "Day 1: API Foundation & Design",
		"description": "Complete collection for Day 1 activities:\n- API Treasure Hunt (5 Real APIs)\n- Local Development Setup\n- Status code testing scenarios\n\nImport this collection and the environment to get started immediately!",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "üéØ API Treasure Hunt",
			"item": [
				{
					"name": "1. JSONPlaceholder (Good Example)",
					"item": [
						{
							"name": "Get Single Post",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts/1",
									"protocol": "https",
									"host": ["jsonplaceholder", "typicode", "com"],
									"path": ["posts", "1"]
								}
							},
							"response": []
						},
						{
							"name": "Get All Posts",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": ["jsonplaceholder", "typicode", "com"],
									"path": ["posts"]
								}
							},
							"response": []
						},
						{
							"name": "Get User Info",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/users/1",
									"protocol": "https",
									"host": ["jsonplaceholder", "typicode", "com"],
									"path": ["users", "1"]
								}
							},
							"response": []
						},
						{
							"name": "Create Post (Test)",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"title\": \"My New Post\",\n  \"body\": \"This is test content\",\n  \"userId\": 1\n}"
								},
								"url": {
									"raw": "https://jsonplaceholder.typicode.com/posts",
									"protocol": "https",
									"host": ["jsonplaceholder", "typicode", "com"],
									"path": ["posts"]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "2. GitHub API (Excellent Example)",
					"item": [
						{
							"name": "Get User - Octocat",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.github.v3+json"
									}
								],
								"url": {
									"raw": "https://api.github.com/users/octocat",
									"protocol": "https",
									"host": ["api", "github", "com"],
									"path": ["users", "octocat"]
								}
							},
							"response": []
						},
						{
							"name": "Get Repository",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.github.v3+json"
									}
								],
								"url": {
									"raw": "https://api.github.com/repos/microsoft/vscode",
									"protocol": "https",
									"host": ["api", "github", "com"],
									"path": ["repos", "microsoft", "vscode"]
								}
							},
							"response": []
						},
						{
							"name": "Get API Rate Limits",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/vnd.github.v3+json"
									}
								],
								"url": {
									"raw": "https://api.github.com/rate_limit",
									"protocol": "https",
									"host": ["api", "github", "com"],
									"path": ["rate_limit"]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "3. OpenWeather (Commercial Example)",
					"item": [
						{
							"name": "Get Weather by City",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.openweathermap.org/data/2.5/weather?q=London&appid={{openweather_api_key}}",
									"protocol": "https",
									"host": ["api", "openweathermap", "org"],
									"path": ["data", "2.5", "weather"],
									"query": [
										{
											"key": "q",
											"value": "London"
										},
										{
											"key": "appid",
											"value": "{{openweather_api_key}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Weather by Coordinates",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.openweathermap.org/data/2.5/weather?lat=51.5074&lon=-0.1278&appid={{openweather_api_key}}",
									"protocol": "https",
									"host": ["api", "openweathermap", "org"],
									"path": ["data", "2.5", "weather"],
									"query": [
										{
											"key": "lat",
											"value": "51.5074"
										},
										{
											"key": "lon",
											"value": "-0.1278"
										},
										{
											"key": "appid",
											"value": "{{openweather_api_key}}"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "4. REST Countries (Simple Example)",
					"item": [
						{
							"name": "Get Country by Name",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://restcountries.com/v3.1/name/france",
									"protocol": "https",
									"host": ["restcountries", "com"],
									"path": ["v3.1", "name", "france"]
								}
							},
							"response": []
						},
						{
							"name": "Get Countries by Region",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://restcountries.com/v3.1/region/europe",
									"protocol": "https",
									"host": ["restcountries", "com"],
									"path": ["v3.1", "region", "europe"]
								}
							},
							"response": []
						},
						{
							"name": "Get All Countries",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://restcountries.com/v3.1/all",
									"protocol": "https",
									"host": ["restcountries", "com"],
									"path": ["v3.1", "all"]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "5. HTTPBin (Testing Tool)",
					"item": [
						{
							"name": "Test GET with parameters",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/get?param1=value1&param2=value2",
									"protocol": "https",
									"host": ["httpbin", "org"],
									"path": ["get"],
									"query": [
										{
											"key": "param1",
											"value": "value1"
										},
										{
											"key": "param2",
											"value": "value2"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Test POST with JSON",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"name\": \"API Learning\",\n  \"type\": \"Educational\"\n}"
								},
								"url": {
									"raw": "https://httpbin.org/post",
									"protocol": "https",
									"host": ["httpbin", "org"],
									"path": ["post"]
								}
							},
							"response": []
						},
						{
							"name": "Test Status Codes",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://httpbin.org/status/404",
									"protocol": "https",
									"host": ["httpbin", "org"],
									"path": ["status", "404"]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "üöÄ Local Development Setup",
			"item": [
				{
					"name": "API Root",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/",
							"host": ["{{local_api_url}}"],
							"path": [""]
						}
					},
					"response": []
				},
				{
					"name": "Health Check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/health",
							"host": ["{{local_api_url}}"],
							"path": ["health"]
						}
					},
					"response": []
				},
				{
					"name": "API Documentation",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/docs",
							"host": ["{{local_api_url}}"],
							"path": ["docs"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìù Task Management (CRUD)",
			"item": [
				{
					"name": "Get All Tasks",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/tasks",
							"host": ["{{local_api_url}}"],
							"path": ["tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific Task",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/tasks/task_001",
							"host": ["{{local_api_url}}"],
							"path": ["tasks", "task_001"]
						}
					},
					"response": []
				},
				{
					"name": "Create New Task",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"title\": \"Learn API Design\",\n  \"description\": \"Study REST principles and HTTP methods\",\n  \"user_story\": \"As a developer, I want to learn API design so that I can build better systems\"\n}"
						},
						"url": {
							"raw": "{{local_api_url}}/tasks",
							"host": ["{{local_api_url}}"],
							"path": ["tasks"]
						}
					},
					"response": []
				},
				{
					"name": "Update Task",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"completed\",\n  \"title\": \"Learn FastAPI - Updated\"\n}"
						},
						"url": {
							"raw": "{{local_api_url}}/tasks/task_001",
							"host": ["{{local_api_url}}"],
							"path": ["tasks", "task_001"]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/tasks/task_002",
							"host": ["{{local_api_url}}"],
							"path": ["tasks", "task_002"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üìñ User Stories (Business Context)",
			"item": [
				{
					"name": "Get All User Stories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/user-stories",
							"host": ["{{local_api_url}}"],
							"path": ["user-stories"]
						}
					},
					"response": []
				},
				{
					"name": "Get Specific User Story",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/user-stories/story_001",
							"host": ["{{local_api_url}}"],
							"path": ["user-stories", "story_001"]
						}
					},
					"response": []
				},
				{
					"name": "Create User Story",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"as_a\": \"team lead\",\n  \"i_want\": \"to assign tasks to team members\",\n  \"so_that\": \"I can distribute work effectively\",\n  \"acceptance_criteria\": [\n    \"Can assign task to specific user\",\n    \"Can set priority levels\",\n    \"Can add due dates\"\n  ],\n  \"priority\": \"high\"\n}"
						},
						"url": {
							"raw": "{{local_api_url}}/user-stories",
							"host": ["{{local_api_url}}"],
							"path": ["user-stories"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üîÑ Response Patterns",
			"item": [
				{
					"name": "Envelope Pattern Demo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/response-patterns/envelope",
							"host": ["{{local_api_url}}"],
							"path": ["response-patterns", "envelope"]
						}
					},
					"response": []
				},
				{
					"name": "Direct Response Demo",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/response-patterns/direct",
							"host": ["{{local_api_url}}"],
							"path": ["response-patterns", "direct"]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "üß™ Status Code Testing",
			"item": [
				{
					"name": "404 - Task Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/tasks/nonexistent",
							"host": ["{{local_api_url}}"],
							"path": ["tasks", "nonexistent"]
						}
					},
					"response": []
				},
				{
					"name": "400 - Bad Request (Demo)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/error/400",
							"host": ["{{local_api_url}}"],
							"path": ["error", "400"]
						}
					},
					"response": []
				},
				{
					"name": "404 - Not Found (Demo)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/error/404",
							"host": ["{{local_api_url}}"],
							"path": ["error", "404"]
						}
					},
					"response": []
				},
				{
					"name": "500 - Server Error (Demo)",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{local_api_url}}/error/500",
							"host": ["{{local_api_url}}"],
							"path": ["error", "500"]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "local_api_url",
			"value": "http://localhost:8001",
			"type": "string"
		},
		{
			"key": "openweather_api_key",
			"value": "demo_key_replace_with_real",
			"type": "string"
		}
	]
} 